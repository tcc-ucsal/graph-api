# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup Java
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'
        - name: Build project
          run: mvn verify
        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN_TWO }}
        - name: Build docker image
          run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/graph-api .
        - name: Push image docker
          run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/graph-api
  
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Remove docker container
        run: CONTAINER_ID=$(sudo docker ps -q --filter "publish=80" --format "{{.ID}}") if [ ! -z "$CONTAINER_ID" ]; then sudo docker stop $CONTAINER_ID $CONTAINER_ID fi
      - name: Pull image from docker hub
        run: sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/graph-api
      - name: Run docker container
        run: sudo docker run -d -p 80:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/graph-api
